{"version":3,"sources":["preload.js"],"names":[],"mappings":";;AAGA;;AACA;;;;AACA;;;;;;AAEA,IAAM,iBAAiB,eAAK,IAAL,CAAU,SAAV,EAAqB,QAArB,EAA+B,kBAA/B,CAAvB,C;;;;;AAEA,wBAAwB,UAAC,KAAD,EAAQ,GAAR,EAAgB;AACpC,0BAAY,IAAZ,CAAiB,cAAjB,EAAiC,KAAjC,EAAwC,GAAxC;AACH,CAFD;;AAIA,SAAS,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;;;AAGhD,WAAO,gBAAP,CAAwB,aAAxB,EAAuC,iBAAS;AAC5C,cAAM,cAAN;AACA,YAAM,gBAAgB,MAAM,UAA5B;AACA,YAAM,aAAa,cAAc,IAAjC;;AAEA,YAAI,CAAC,UAAL,EAAiB;AACb,kCAAY,IAAZ,CAAiB,mBAAjB,EAAsC,YAAM;AACxC,8BAAc,MAAM,MAApB;AACA,sCAAY,IAAZ,CAAiB,yBAAjB;AACH,aAHD;AAIH;;AAED,8BAAY,IAAZ,CAAiB,mBAAjB,EAAsC,UAAtC;AACH,KAbD,EAaG,KAbH;;AAeA;AACH,CAnBD;;AAqBA,sBAAY,EAAZ,CAAe,QAAf,EAAyB,UAAC,KAAD,EAAQ,OAAR,EAAoB;AACzC,QAAM,UAAU,KAAK,KAAL,CAAW,OAAX,CAAhB;AACA,YAAQ,GAAR,CAAY,iBAAZ,EAA+B,OAA/B;AACH,CAHD;;AAKA,sBAAY,EAAZ,CAAe,OAAf,EAAwB,UAAC,KAAD,EAAQ,OAAR,EAAoB;AACxC,YAAQ,GAAR,CAAY,QAAZ,EAAsB,OAAtB;AACH,CAFD;;AAIA,sBAAY,EAAZ,CAAe,aAAf,EAA8B,UAAC,KAAD,EAAQ,OAAR,EAAoB;AAC9C,uBAAS,aAAT,CAAuB,OAAvB;AACH,CAFD;;;;;;AAQA,SAAS,uBAAT,CAAiC,QAAjC,EAA2C;;AAEvC,QAAM,YAAY,OAAO,YAAzB;AACA,QAAM,YAAY,SAAZ,SAAY,CAAC,KAAD,EAAQ,GAAR,EAAgB;AAC9B,iBAAS,KAAT,EAAgB,GAAhB;AACA,eAAO,IAAI,SAAJ,CAAc,KAAd,EAAqB,GAArB,CAAP;AACH,KAHD;AAIA,cAAU,iBAAV,GAA8B,UAAU,iBAAV,CAA4B,IAA5B,CAAiC,SAAjC,CAA9B;AACA,WAAO,cAAP,CAAsB,SAAtB,EAAiC,YAAjC,EAA+C;AAC3C,aAAK,eAAM;AACP,mBAAO,UAAU,UAAjB;AACH;AAH0C,KAA/C;;AAMA,WAAO,YAAP,GAAsB,SAAtB;AACH;;AAED,SAAS,aAAT,CAAuB,OAAvB,EAAgC;AAC5B,QAAM,aAAa,IAAI,UAAJ,CAAe,OAAf,CAAnB;AACA,YAAQ,aAAR,CAAsB,UAAtB;AACH;;AAED,SAAS,aAAT,GAAyB;AACrB,QAAM,eAAe,aAAG,UAAH,CAAc,cAAd,CAArB;AACA,QAAI,CAAC,YAAL,EAAmB;AACf;AACH;AACD,YAAQ,cAAR;AACH","file":"preload.js","sourcesContent":["/**\n Preload file that will be executed in the renderer process\n */\nimport {ipcRenderer, webFrame} from 'electron';\nimport path from 'path';\nimport fs from 'fs';\n\nconst INJECT_JS_PATH = path.join(__dirname, '../../', 'inject/inject.js');\n\nsetNotificationCallback((title, opt) => {\n    ipcRenderer.send('notification', title, opt);\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    // do things\n\n    window.addEventListener('contextmenu', event => {\n        event.preventDefault();\n        const targetElement = event.srcElement;\n        const targetHref = targetElement.href;\n\n        if (!targetHref) {\n            ipcRenderer.once('contextMenuClosed', () => {\n                clickSelector(event.target);\n                ipcRenderer.send('cancelNewWindowOverride');\n            });\n        }\n\n        ipcRenderer.send('contextMenuOpened', targetHref);\n    }, false);\n\n    injectScripts();\n});\n\nipcRenderer.on('params', (event, message) => {\n    const appArgs = JSON.parse(message);\n    console.log('nativefier.json', appArgs);\n});\n\nipcRenderer.on('debug', (event, message) => {\n    console.log('debug:', message);\n});\n\nipcRenderer.on('change-zoom', (event, message) => {\n    webFrame.setZoomFactor(message);\n});\n\n/**\n * Patches window.Notification to set a callback on a new Notification\n * @param callback\n */\nfunction setNotificationCallback(callback) {\n\n    const OldNotify = window.Notification;\n    const newNotify = (title, opt) => {\n        callback(title, opt);\n        return new OldNotify(title, opt);\n    };\n    newNotify.requestPermission = OldNotify.requestPermission.bind(OldNotify);\n    Object.defineProperty(newNotify, 'permission', {\n        get: () => {\n            return OldNotify.permission;\n        }\n    });\n\n    window.Notification = newNotify;\n}\n\nfunction clickSelector(element) {\n    const mouseEvent = new MouseEvent('click');\n    element.dispatchEvent(mouseEvent);\n}\n\nfunction injectScripts() {\n    const needToInject = fs.existsSync(INJECT_JS_PATH);\n    if (!needToInject) {\n        return;\n    }\n    require(INJECT_JS_PATH);\n}\n"],"sourceRoot":"/source/"}